과정명: 파이썬 기초/응용, 데이터 분석 (총 75시간)
일  정: 11일 수업(10일 7시간, 1일 5시간)
         - 파이썬 기초/응용 (42시간)
         - 데이터 분석(33시간)

  0 ~  7	파이썬 역사, 설치, 숫자(정수,실수), 문자열형
  8 ~ 14	목록, 튜플, 사전, 셋
 15 ~ 21	if문
 22 ~ 28	while문, 함수
 29 ~ 35	파일입출력
 36 ~ 42	class, 예외처리, 내장함수
 43 ~		데이터 분석

 일일 시간표
 1교시	10:00 ~ 10:50
 2교시	11:00 ~ 11:50
 3교시	12:00 ~ 12:50
	점 심 시 간
 4교시	14:00 ~ 14:50
 5교시	15:00 ~ 15:50
 6교시	16:00 ~ 16:50
 7교시	17:00 ~ 17:50

 10:10 까지는 정상출석으로 인정되나 10:11 이후부터는
 지각처리됩니다. 일일 수업에 50%이상 수강하셔야 지각/
 조퇴/외출 처리가 가능하나 50%미만인 경우 결석처리됩니다.
 지각/조퇴/외출이 3회가 누적되면 결석 1회로 간주된다.

 총 수업시간에 80%이상 수강하셔야 수료처리가 가능하고,
 80%미만 경우에는 수료가 불가능합니다.


프로그래밍 언어

 1. compile(번역) 언어: C, C++, C#, Java
    Source Code    -compile->	Binary Code(저장)    -실행->	결과(정보)
    사람이 이해			기계가 이해
    하는 코드			하는 코드

 2. interpreter(통역) 언어: Python, JavaScript, Ruby
    Source Code    -interpreter,실행->	결과(정보)
    사람이 이해
    하는 코드

Version(버전)
 x.y.z
 x	: Major(주)  , 획기적인(큰) 변화
   y	: Minor(부)  , 기능 개선(추가)
     z	: Patch(패치), 문제점 해결

   버전		설치 디렉토리			정보
   3.10.0	...\Python\Python310\파일들
   3.10.1	...\Python\Python310\파일들	3.10.0 동일 버전(같이 디렉토리)
   3.10.8	...\Python\Python310\파일들	3.10.0 동일 버전(같이 디렉토리)
   3.11.0	...\Python\Python311\파일들	3.10.0 다른 버전(다른 디렉토리)

   ※ Python은 한 컴퓨터에서 계정별로 다른 Version을 설치하여 사용할 수도 있고,
      한 계정에서 여러 개의 Version을 설치하여 선택적으로 사용할 수 도 있다.

Editor(편집기)
  Visual Studio		: Microsoft 제품, 상용제품(비쌈), 기능이 많음
  Visual Studio Code	: Microsoft 제품, 무료제품, 핵심기능 포함 (추천)
  PyCharm		: 파이썬 전용, 상용/무료, 기능이 많음
			  -> 프로젝트(웹 개발)
  Anconda		: 파이썬 전용, 상용/무료, 기능이 많음
			  -> 데이터 분석, 머신 러닝
  Notepad++		: 무료제품, 기능이 적음(기초/응용 수업)
			  -> http://notepad-plus-plus.org
  Jupyter Notebook	: 웹 브라우저에서 실행하는 편집기(데이터분석 수업)


프롬프트(Prompt)
 - 사용자의 키보드입력을 대기하고 있는 모양
   사용자에게 키보드입력시 도움이 되는 정보를 제공하는 역할

C:\doit>	현재 Windows에서 C: 드라이브의 doit 디렉토리에 위치하여
		Windows	명령어 입력이 가능하다.

>>>		Python interactive(대화) 모드 현재 Python 프로그램이
		실행되어 코드 입력이 가능하다.
...		한 행으로 코드가 완성되지 않고, 여러 행으로 코드를 작성 중이다.


연산자

  1. 산술연산자: +, -, *, /, **, //, %
  2. 관계(비교)연산자: ==, !=, >, >=, <, <=
  3. 논리연산자: not, and, or


문자열(str) 데이터
 - 문자들이 나열되서 만들어진 데이터이고, 문자 1개(원소) 1개(원소)가
   구별되는 데이터형
                                     -6   -1
  변수 = "Life is too short, You need python"
          0         1         2         3
  index   0123456789012345678901234567890123

  index(인덱스)는 문자열내의 문자들을 왼쪽에서부터 0부터 1씩 증가시켜면서
  부여한 숫자이고, -1을 이용하여 오른쪽에서부터 왼쪽방향으로도 1씩 감소
  시키면서 접근할 수 있다.

indexing(인덱싱) : 문자열내에 있는 특정 문자 1개를 조회(추출)하는 기능

  사용법: 변수[index]	->	'문자'
          변수[0]	->	'L'
          변수[17]	->	','
          변수[33]	->	'n'
          변수[-1]	->	'n'
          변수[-6]	->	'p'

slicing(슬라이싱) : 문자열내에서 있는 연속적인 문자들을 조회(추출)하는 기능

  변수 = "Life is too short, You need python"
          0         1         2         3
  index   0123456789012345678901234567890123

  사용법: 변수[start:end:step]	-> start이상부터 end미만사이의 step(간격)으로
          start <= 범위 < end	   연속적인 문자열을 조회
				   start 생략시 0(기본)이상부터
				   end   생략시 끝까지
				   step  생략시 1(기본,간격)으로

          변수[8:20:2]		-> [8]인덱스이상부터 [20]인덱스미만사이의 2(간격)으로
				   연속적인 문자열을 조회
				   결과: "tosot "
          변수[8:20]		-> [8]인덱스이상부터 [20]인덱스미만사이의 1(기본,간격)으로
				   연속적인 문자열을 조회
				   결과: "too short, Y"
          변수[0:3]		-> 결과: "Lif"
          변수[0:4]		-> 결과: "Life"
          변수[:17]		-> 결과: "Life is too short"
          변수[19:]		-> 결과: "You need python"
